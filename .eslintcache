[{"F:\\intern-projects\\react-simple-login-signup\\src\\reportWebVitals.js":"1","F:\\intern-projects\\react-simple-login-signup\\src\\App.js":"2","F:\\intern-projects\\react-simple-login-signup\\src\\components\\Auth\\firebase.config.js":"3","F:\\intern-projects\\react-simple-login-signup\\src\\components\\Auth\\Login.js":"4","F:\\intern-projects\\react-simple-login-signup\\src\\index.js":"5","F:\\intern-projects\\react-simple-login-signup\\src\\components\\Auth\\LoginManager.js":"6","F:\\intern-projects\\react-simple-login-signup\\src\\components\\Home\\Home.js":"7","F:\\intern-projects\\react-simple-login-signup\\src\\components\\PrivateRoute\\PrivateRoute.js":"8","F:\\intern-projects\\react-simple-login-signup\\src\\components\\Routes\\Routes.js":"9"},{"size":362,"mtime":1607169403604,"results":"10","hashOfConfig":"11"},{"size":452,"mtime":1608345568302,"results":"12","hashOfConfig":"11"},{"size":379,"mtime":1608347205103,"results":"13","hashOfConfig":"11"},{"size":8684,"mtime":1608346819993,"results":"14","hashOfConfig":"11"},{"size":500,"mtime":1607169403604,"results":"15","hashOfConfig":"11"},{"size":3492,"mtime":1608342944751,"results":"16","hashOfConfig":"11"},{"size":1112,"mtime":1608345340413,"results":"17","hashOfConfig":"11"},{"size":1007,"mtime":1608344404792,"results":"18","hashOfConfig":"11"},{"size":573,"mtime":1608345543777,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1147soo",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"F:\\intern-projects\\react-simple-login-signup\\src\\reportWebVitals.js",[],"F:\\intern-projects\\react-simple-login-signup\\src\\App.js",[],"F:\\intern-projects\\react-simple-login-signup\\src\\components\\Auth\\firebase.config.js",[],"F:\\intern-projects\\react-simple-login-signup\\src\\components\\Auth\\Login.js",["40"],"import React, { useContext, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../App\";\r\nimport \"./Login.css\";\r\nimport {\r\n   createUserWithEmailAndPassword,\r\n   handleGoogleSignIn,\r\n   handleSignOut,\r\n   initializeLoginFramework,\r\n   signInWithEmailAndPassword,\r\n} from \"./LoginManager\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport GoogleIcon from \"./GoogleIcon.png\";\r\n\r\nexport const Login = () => {\r\n   // const [newUser, setNewUser] = useState(false);\r\n   const { register, handleSubmit, errors } = useForm();\r\n\r\n   const [name, setName] = useState(\"\");\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n   const [user, setUser] = useState({\r\n      isSignedIn: false,\r\n      name: \"\",\r\n      email: \"\",\r\n      photo: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n   });\r\n\r\n   // context api\r\n   const [loggedInUser, setLoggedInUser] = useContext(AuthContext);\r\n\r\n   initializeLoginFramework();\r\n\r\n   const history = useHistory();\r\n   const location = useLocation();\r\n   let { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n   // to sign in via google\r\n   const googleSignIn = () => {\r\n      handleGoogleSignIn().then((res) => {\r\n         handleResponse(res, true);\r\n      });\r\n   };\r\n\r\n   // to sign out from all account\r\n   const signOut = () => {\r\n      handleSignOut().then((res) => {\r\n         handleResponse(res, false);\r\n      });\r\n   };\r\n\r\n   const handleBlur = (e) => {\r\n      let isFieldValid = true;\r\n      const { name, value: defaultValue } = e.target;\r\n      if (name === \"name\") {\r\n         setName(defaultValue);\r\n      }\r\n      if (name === \"email\") {\r\n         setEmail(defaultValue);\r\n         isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\r\n      }\r\n      if (name === \"password\") {\r\n         setPassword(defaultValue);\r\n         const isPasswordValid = e.target.value.length > 6;\r\n         const passwordHasNumber = /\\d{1}/.test(e.target.value);\r\n         isFieldValid = isPasswordValid && passwordHasNumber;\r\n      }\r\n      if (name === \"confirmPassword\") {\r\n         setConfirmPassword(defaultValue);\r\n         const isPasswordValid = e.target.value.length > 6;\r\n         const passwordHasNumber = /\\d{1}/.test(e.target.value);\r\n         isFieldValid = isPasswordValid && passwordHasNumber;\r\n      }\r\n      if (isFieldValid) {\r\n         const newUserInfo = { ...user };\r\n         newUserInfo[e.target.name] = e.target.value;\r\n         setUser(newUserInfo);\r\n      }\r\n   };\r\n\r\n   const handleSignUp = () => {\r\n      if (password === confirmPassword) {\r\n         if (user.name && user.email && user.password) {\r\n            createUserWithEmailAndPassword(user.name, user.email, user.password).then((res) => {\r\n               handleResponse(res, true);\r\n            });\r\n         }\r\n      } else {\r\n         alert(\"pasword didn't matched\");\r\n      }\r\n   };\r\n\r\n   const handleSignIn = () => {\r\n      signInWithEmailAndPassword(user.email, user.password).then((res) => {\r\n         handleResponse(res, true);\r\n         console.log(res.displayName);\r\n      });\r\n   };\r\n\r\n   const handleResponse = (res, redirect) => {\r\n      setUser(res);\r\n      setLoggedInUser(res);\r\n      if (redirect) {\r\n         history.push(\"/\");\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         {user.isSignedIn ? (\r\n            <button onClick={signOut}>Sign out</button>\r\n         ) : (\r\n            <div className=\"auth my-3\">\r\n               <button onClick={googleSignIn}>\r\n                  <img src={GoogleIcon} alt=\"\" />\r\n                  Continue with Google\r\n               </button>\r\n            </div>\r\n         )}\r\n\r\n         {!loggedInUser ? (\r\n            <div className=\"container\">\r\n               <form onSubmit={handleSubmit(handleSignUp)}>\r\n                  <p className=\"text-danger\">\r\n                     * Your password must be at least six characters long and must have at least one\r\n                     number\r\n                  </p>\r\n                  <div className=\"inputBox\">\r\n                     <input\r\n                        ref={register({ required: true })}\r\n                        onBlur={handleBlur}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        defaultValue={name}\r\n                        placeholder=\"First Name\"\r\n                     />\r\n                     {errors.name && <span className=\"text-danger\">Name is required</span>}\r\n                  </div>\r\n\r\n                  <div className=\"inputBox\">\r\n                     <input\r\n                        onBlur={handleBlur}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        defaultValue={name}\r\n                        placeholder=\"Last Name\"\r\n                     />\r\n                  </div>\r\n\r\n                  <div className=\"inputBox\">\r\n                     <input\r\n                        ref={register({ required: true })}\r\n                        onBlur={handleBlur}\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        defaultValue={email}\r\n                        placeholder=\"Username or Email\"\r\n                     />\r\n                     {errors.email && <span className=\"text-danger\">Email is required</span>}\r\n                  </div>\r\n\r\n                  <div className=\"inputBox\">\r\n                     <input\r\n                        ref={register({ required: true })}\r\n                        onBlur={handleBlur}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        defaultValue={password}\r\n                        placeholder=\"Enter Your Password\"\r\n                     />\r\n                     {errors.password && <span className=\"text-danger\">Password is required</span>}\r\n                  </div>\r\n                  <div className=\"inputBox\">\r\n                     <input\r\n                        ref={register({ required: true })}\r\n                        onBlur={handleBlur}\r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        defaultValue={confirmPassword}\r\n                        placeholder=\"Confirm Password\"\r\n                     />\r\n                     {errors.confirmPassword && (\r\n                        <span className=\"text-danger\">\r\n                           Please confirm your password before submitting\r\n                        </span>\r\n                     )}\r\n                  </div>\r\n\r\n                  <input type=\"submit\" value=\"SignUp\" />\r\n                  <br />\r\n                  <label className=\"label\" onClick={() => setLoggedInUser(true)}>\r\n                     Already have an account?\r\n                  </label>\r\n               </form>\r\n            </div>\r\n         ) : (\r\n            <div className=\"container\">\r\n               <form onSubmit={handleSubmit(handleSignIn)}>\r\n                  <div className=\"inputBox\">\r\n                     <input\r\n                        md=\"12\"\r\n                        lg=\"12\"\r\n                        onBlur={handleBlur}\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        defaultValue={email}\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Email\"\r\n                     />\r\n                     {errors.email && <span className=\"text-danger\">Email is required</span>}\r\n                  </div>\r\n\r\n                  <div className=\"inputBox\">\r\n                     <input\r\n                        md=\"12\"\r\n                        lg=\"12\"\r\n                        onBlur={handleBlur}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        defaultValue={password}\r\n                        ref={register({ required: true })}\r\n                        placeholder=\"Password\"\r\n                     />\r\n                     {errors.password && <span className=\"text-danger\">Password is required</span>}\r\n                  </div>\r\n\r\n                  <input type=\"submit\" value=\"Login\" />\r\n                  <br />\r\n                  <span className=\"label mt-2\" onClick={() => setLoggedInUser(false)}>\r\n                     Create New Account\r\n                  </span>\r\n               </form>\r\n            </div>\r\n         )}\r\n         <p className=\"text-danger\">{user.error}</p>\r\n         {user.success && (\r\n            <p className=\"text-success\">Account Created successfully, you can now login</p>\r\n         )}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Login;\r\n",["41","42"],"F:\\intern-projects\\react-simple-login-signup\\src\\index.js",[],"F:\\intern-projects\\react-simple-login-signup\\src\\components\\Auth\\LoginManager.js",[],"F:\\intern-projects\\react-simple-login-signup\\src\\components\\Home\\Home.js",[],"F:\\intern-projects\\react-simple-login-signup\\src\\components\\PrivateRoute\\PrivateRoute.js",["43"],"F:\\intern-projects\\react-simple-login-signup\\src\\components\\Routes\\Routes.js",[],{"ruleId":"44","severity":1,"message":"45","line":40,"column":10,"nodeType":"46","messageId":"47","endLine":40,"endColumn":14},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"44","severity":1,"message":"52","line":9,"column":10,"nodeType":"46","messageId":"47","endLine":9,"endColumn":20},"no-unused-vars","'from' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["53"],"no-negated-in-lhs",["54"],"'isLoggedIn' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]